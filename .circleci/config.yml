version: 2.1

defaults: &defaults
  docker:
    - image: circleci/android:api-30-node
  environment:
    JVM_OPTS: -Xmx3200m

jobs:
  createSonarEnv:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Generate sonar-project.properties
          command: |
            touch sonar-project.properties
            echo sonar.projectKey=$sonar_projectKey >> sonar-project.properties
            echo sonar.host.url=$sonar_host_url >> sonar-project.properties
            echo sonar.login=$sonar_projectKey >> sonar-project.properties
            echo sonar.junit.reportPaths=$sonar_junit_reportPaths >> sonar-project.properties
            echo sonar.coverage.jacoco.xmlReportPaths=$sonar_coverage_jacoco_xmlReportPaths >> sonar-project.properties
            echo sonar.kotlin.detekt.reportPaths=$sonar_kotlin_detekt_reportPaths >> sonar-project.properties
            echo sonar.dependencyCheck.htmlReportPath=$sonar_dependencyCheck_htmlReportPath >> sonar-project.properties

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [ app-build ]
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: app-build

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [ app-build ]
      - run:
          name: Run Tests
          command: ./gradlew test
      - store_artifacts:
          path: app/build/reports
          destination: reports

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys: [ app-build ]
      - run:
          name: Generate local.properties
          command: |
            touch local.properties
            echo ossrhPassword=$ossrhPassword >> local.properties
            echo ossrhUsername=$ossrhUsername >> local.properties
            echo signing.key=$signing_key >> local.properties
            echo signing.password=$signing_password >> local.properties
            echo signing.keyId=$signing_keyId >> local.properties
            cat local.properties
            pwd
            ls
            mkdir /tmp/artifacts
            cp local.properties /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
          destination: /tmp/artifacts/local.properties
      - run:
          name: Publish Library
          command: |
            pwd
            ls
            ./gradlew ScoreIndicator:publishReleasePublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository


workflows:
  scoreIndicator:
    jobs:
      - createSonarEnv
      - build:
          requires:
            - createSonarEnv
      - test:
          requires:
            - createSonarEnv
      - publish:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - release/0.1.2
                # TODO: set to release branch first